name: Deployaws

on:
  push:
    branches:
      - release/6.0.0
  pull_request:
    types:
      - closed

jobs:
  deploy:
#    if: github.event.pull_request.merged == true
    environment: release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Print vars.AWS_REGION
        run: echo "vars.AWS_REGION=${{ vars.AWS_REGION }}"

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
        working-directory: ./BPS
        env:
          DB_URL: "${{ secrets.DB_URL }}"
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}


      # .env 파일 생성
      - name: Create .env file
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> .env

      # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # S3 버킷에 업로드 할 파일 압축
      - name: Zip deployment files
        run: |
          zip $GITHUB_SHA.zip .env .dockerignore appspec.yml docker-compose.yml Dockerfile start.sh stop.sh ./BPS/target/*.jar
          

      # Zip 파일을 S3로 업로드
      - name: Upload Zip to AWS S3
        run: |
          aws s3 cp $GITHUB_SHA.zip s3://${{ vars.S3_BUCKET_NAME }}/$GITHUB_SHA.zip 
      

      # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ vars.CODE_DEPLOY_APP_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ vars.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ vars.S3_BUCKET_NAME }},key=$GITHUB_SHA.zip,bundleType=zip
